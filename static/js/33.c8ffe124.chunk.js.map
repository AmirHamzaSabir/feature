{"version":3,"sources":["views/category/Add.js"],"names":["ToastContent","_ref","name","_jsx","_Fragment","children","className","_jsxs","toUpperCase","ToastError","_ref2","Add","dispatch","useDispatch","history","useHistory","_useForm","useForm","defaultValues","category","reset","control","setError","handleSubmit","errors","formState","Form","onSubmit","data","Object","values","every","field","length","addCategory","_objectSpread","then","res","error","console","log","toast","payload","username","icon","transition","Slide","hideProgressBar","autoClose","push","success","key","type","Row","Col","md","xs","Label","for","Controller","id","render","_ref3","Input","placeholder","invalid","Button","color","outline","onClick"],"mappings":"+NAQMA,EAAe,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAC1BC,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKG,UAAU,kBAAiBD,SAC9BF,cAAA,OAAKG,UAAU,gBAAeD,SAC5BE,eAAA,MAAID,UAAU,sBAAqBD,SAAA,CAAC,+BAA6BH,EAAKM,sBAGzE,EAECC,EAAa,SAAHC,GAAA,IAAMR,EAAIQ,EAAJR,KAAI,OACxBC,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKG,UAAU,kBAAiBD,SAC9BF,cAAA,OAAKG,UAAU,gBAAeD,SAC5BE,eAAA,MAAID,UAAU,sBAAqBD,SAAA,CAAC,eAAaH,EAAKM,sBAGzD,EAmGUG,UAhGH,WAER,IAAMC,EAAWC,cACXC,EAAUC,uBAEhBC,EAMIC,YAAQ,CACZC,cAAe,CACbC,SAAU,MAPZC,EAAKJ,EAALI,MACAC,EAAOL,EAAPK,QACAC,EAAQN,EAARM,SACAC,EAAYP,EAAZO,aACaC,EAAMR,EAAnBS,UAAaD,OA2Cb,OACIjB,eAAAH,WAAA,CAAAC,SAAA,CACEF,cAAA,OAAKG,UAAU,mBAAkBD,SAC/BF,cAAA,MAAIG,UAAU,OAAMD,SAAC,mBAEvBF,cAACuB,IAAI,CAACC,SAAUJ,GAzCL,SAAAK,GACf,GAAIC,OAAOC,OAAOF,GAAMG,OAAM,SAAAC,GAAK,OAAIA,EAAMC,OAAS,CAAC,IAErDrB,EAASsB,YAAWC,YAAC,CAAC,EACjBP,KACDQ,MAAK,SAAAC,GACHA,EAAIC,OACNC,QAAQC,IAAIH,GACZI,IAAMH,MACJnC,cAACM,EAAU,CAACP,KAAMmC,EAAIK,SAAWL,EAAIK,QAAQC,UAAY,aACzD,CAAEC,MAAM,EAAOC,WAAYC,IAAOC,iBAAiB,EAAMC,UAAW,QAGtElC,EAAQmC,KAAK,aACbR,IAAMS,QACN/C,cAACH,EAAY,CAACE,KAAMmC,EAAIK,QAAQvB,UAAYkB,EAAIK,QAAQC,UAAY,aACpE,CAAEC,MAAM,EAAOC,WAAYC,IAAOC,iBAAiB,EAAMC,UAAW,MAGxE,SAEA,IAAK,IAAMG,KAAOvB,EACS,IAArBA,EAAKuB,GAAKlB,QACZX,EAAS6B,EAAK,CACZC,KAAM,UAKhB,IAY6C/C,SACrCE,eAAC8C,IAAG,CAAC/C,UAAU,aAAYD,SAAA,CACzBE,eAAC+C,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAGnD,SAAA,CAClBF,cAACsD,IAAK,CAACnD,UAAU,aAAaoD,IAAI,WAAUrD,SAAC,kBAG7CF,cAACwD,IAAU,CACTtC,QAASA,EACT+B,KAAK,WACLQ,GAAG,WACH1D,KAAK,WACL2D,OAAQ,SAAAC,GAAA,IAAG9B,EAAK8B,EAAL9B,MAAK,OACd7B,cAAC4D,IAAK5B,wBAAA,GAAKH,GAAK,IAAE4B,GAAG,WAAWI,YAAY,QAAQC,QAASzC,EAAOL,WAAY,IAAQ,OAI9FZ,eAAC+C,IAAG,CAACE,GAAI,GAAIlD,UAAU,yBAAwBD,SAAA,CAC7CF,cAAC+D,IAAM,CAACd,KAAK,SAAS9C,UAAU,OAAO6D,MAAM,UAAS9D,SAAC,WAGvDF,cAAC+D,IAAM,CACLd,KAAK,QACLe,MAAM,YACNC,SAAO,EACPC,QAAS,WAlCnBjD,EAAM,CACJD,SAAU,KAmCAL,EAAQmC,KAAK,YACf,EAAE5C,SACH,sBAQjB,C","file":"static/js/33.c8ffe124.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Row, Col, Form, Button, Input, Label, Spinner } from 'reactstrap'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport {useDispatch } from 'react-redux'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { addCategory } from './store/categorySlice'\r\n\r\nconst ToastContent = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>You have successfully Added {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\nconst ToastError = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>Error Added {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst Add = () => {\r\n    // ** State\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n      // ** Hook\r\n    const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n    } = useForm({\r\n    defaultValues: {\r\n      category: ''\r\n  }\r\n    })\r\n\r\n    const onSubmit = data => {\r\n      if (Object.values(data).every(field => field.length > 0)) {\r\n\r\n        dispatch(addCategory({\r\n          ...data\r\n        })).then(res => {\r\n          if (res.error) {\r\n            console.log(res)\r\n            toast.error(\r\n              <ToastError name={res.payload || res.payload.username || 'Category'} />,\r\n              { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n            )\r\n          } else {\r\n            history.push(\"/category\")\r\n            toast.success(\r\n            <ToastContent name={res.payload.category || res.payload.username || 'Category'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key].length === 0) {\r\n            setError(key, {\r\n              type: 'manual'\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const handleReset = () => {\r\n        reset({\r\n          category: ''\r\n        })\r\n      }\r\n\r\n    return ( \r\n        <>\r\n          <div className='text-center mb-2'>\r\n            <h1 className='mb-1'>Add Category</h1>\r\n          </div>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row className='gy-1 pt-75'>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='category'>\r\n                  Category Name\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='category'\r\n                  id='category'\r\n                  name='category'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='category' placeholder='Dress' invalid={errors.category && true} />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col xs={12} className='text-center mt-2 pt-50'>\r\n                <Button type='submit' className='me-1' color='primary'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  type='reset'\r\n                  color='secondary'\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    history.push(\"/category\")\r\n                  }}\r\n                >\r\n                  Discard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </>\r\n     )\r\n}\r\n \r\nexport default Add"],"sourceRoot":""}