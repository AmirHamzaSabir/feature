{"version":3,"sources":["views/delivery/Add.js"],"names":["ToastContent","_ref","name","_jsx","_Fragment","children","className","_jsxs","toUpperCase","ToastError","_ref2","Add","dispatch","useDispatch","history","useHistory","_useForm","useForm","defaultValues","pinCode","district","countryName","reset","control","setError","handleSubmit","errors","formState","Form","onSubmit","data","Object","values","every","field","length","addDeliveryCode","_objectSpread","then","res","payload","error","toast","username","icon","transition","Slide","hideProgressBar","autoClose","push","success","record","key","console","log","type","Row","Col","md","xs","Label","for","Controller","id","render","_ref3","Input","placeholder","invalid","_ref4","_ref5","Button","color","outline","onClick"],"mappings":"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","file":"static/js/24.ab9a8e97.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Row, Col, Form, Button, Input, Label, Spinner } from 'reactstrap'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport {useDispatch } from 'react-redux'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { addDeliveryCode } from './store/deliverySlice'\r\n\r\nconst ToastContent = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>You have successfully Added {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\nconst ToastError = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>Error Added {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst Add = () => {\r\n    // ** State\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n      // ** Hook\r\n    const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n    } = useForm({\r\n    defaultValues: {\r\n      pinCode: '',\r\n      district: '',\r\n      countryName: ''\r\n  }\r\n    })\r\n\r\n    const onSubmit = data => {\r\n      if (Object.values(data).every(field => field.length > 0)) {\r\n\r\n        dispatch(addDeliveryCode({\r\n          ...data\r\n        })).then(res => {\r\n          if (res.payload.error) {\r\n            toast.error(\r\n              <ToastError name={res.payload.error || res.payload.username || 'John Doe'} />,\r\n              { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n            )\r\n          } else {\r\n            history.push(\"/delivery\")\r\n            toast.success(\r\n            <ToastContent name={res.payload.record.district || res.payload.username || 'John Doe'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          console.log(key)\r\n          if (data[key].length === 0) {\r\n            setError(key, {\r\n              type: 'manual'\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const handleReset = () => {\r\n        reset({\r\n          pinCode: '',\r\n          district: '',\r\n          countryName: ''\r\n        })\r\n      }\r\n\r\n    return ( \r\n        <>\r\n          <div className='text-center mb-2'>\r\n            <h1 className='mb-1'>Add Delivery Code</h1>\r\n          </div>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row className='gy-1 pt-75'>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='pinCode'>\r\n                  PinCode\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='pinCode'\r\n                  id='pinCode'\r\n                  name='pinCode'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='pinCode' placeholder='46512' invalid={errors.pinCode && true} />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='district'>\r\n                  District\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='district'\r\n                  id='district'\r\n                  name='district'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='district' placeholder='Delhi' invalid={errors.district && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='countryName'>\r\n                  Country Name\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='countryName'\r\n                  id='countryName'\r\n                  name='countryName'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='countryName' placeholder='India' invalid={errors.countryName && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col xs={12} className='text-start mt-2 pt-50'>\r\n                <Button type='submit' className='me-1' color='primary'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  type='reset'\r\n                  color='secondary'\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    history.push(\"/delivery\")\r\n                  }}\r\n                >\r\n                  Discard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </>\r\n     )\r\n}\r\n \r\nexport default Add"],"sourceRoot":""}