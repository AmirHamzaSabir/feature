{"version":3,"sources":["@core/components/widgets/stats/StatsHorizontal.js","functions/customfunctions.js","@core/components/sidebar/index.js","views/user/customer/Sidebar.js","views/user/customer/delete.js","views/user/customer/columns.js","views/user/customer/Table.js","views/user/customer/index.js"],"names":["StatsHorizontal","_ref","icon","color","stats","renderStats","statTitle","className","statsMargin","_jsx","Card","children","CardBody","_jsxs","classnames","_defineProperty","concat","roleText","role","statusText","status","Sidebar","props","_classnames3","open","size","title","width","closeBtn","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","_objectWithoutProperties","_excluded","renderCloseBtn","X","onClick","Modal","_objectSpread","isOpen","toggle","modalClassName","undefined","style","String","ModalHeader","close","tag","PerfectScrollbar","options","wheelPropagation","ModalBody","defaultValues","name","email","password","c_password","contactNumber","address","SidebarNewUsers","_useState","useState","_useState2","_slicedToArray","setRole","dispatch","useDispatch","_useForm","useForm","control","setValue","setError","handleSubmit","errors","formState","onClosed","key","Form","onSubmit","data","Object","values","every","field","length","checkIsValid","addCustomer","then","res","console","log","catch","err","alert","type","Label","for","Controller","render","_ref2","Input","id","placeholder","invalid","_ref3","FormText","_ref4","_ref5","_ref6","_ref7","Button","outline","MySwal","withReactContent","Swal","handleRemove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","store","removeCustomer","getAllCustomers","getCustomerChunk","abrupt","t0","stop","_x","apply","arguments","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","row","cell","Link","to","_id","Badge","pill","UncontrolledDropdown","DropdownToggle","MoreVertical","DropdownMenu","DropdownItem","Archive","href","e","preventDefault","fire","text","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","_callee2","result","_context2","value","dismiss","DismissReason","cancel","_x2","Trash2","CustomHeader","createAsyncThunk","response","axios","get","sent","params","users","totalPages","total","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Row","Col","xl","htmlFor","onChange","target","caret","Share","Printer","FileText","Grid","File","Copy","UsersList","useSelector","state","customers","sort","setSort","_useState3","_useState4","setSearchTerm","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","sortColumn","setSortColumn","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","sidebarOpen","setSidebarOpen","_useState13","label","_useState14","currentStatus","setCurrentStatus","useEffect","q","page","perPage","Fragment","CardHeader","CardTitle","md","Select","theme","selectThemeColors","isClearable","classNamePrefix","number","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","activeCustomers","filter","employee","lg","sm","User","UserCheck","UserPlus","Table"],"mappings":"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","file":"static/js/12.88dd6571.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","export const roleText = (role) => {\r\n    switch (role) {\r\n        case 0:\r\n          return \"User\"\r\n        case 1:\r\n          return \"Admin\"\r\n        case 2:\r\n          return \"SuperAdmin\"\r\n      }\r\n}\r\n\r\nexport const  statusText = (status) => {\r\n    if (status) {\r\n      return \"active\"\r\n    } else {\r\n      return \"inactive\"\r\n    }\r\n  }","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\n// import { addUser } from '../store'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addCustomer } from './store/customerSlice'\r\n\r\nconst defaultValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  c_password: \"\",\r\n  contactNumber: \"\",\r\n  address: \"\"\r\n  \r\n}\r\n\r\nconst checkIsValid = data => {\r\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\r\n}\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** States\r\n  const [role, setRole] = useState(0)\r\n  // const [data, setData] = useState(null)\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const {\r\n    control,\r\n    setValue,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n// console.log(data)\r\n  // ** Function to handle form submit\r\n  const onSubmit = data => {\r\n    // setData(data)\r\n    if (role === null) {\r\n      setRole(0)\r\n    }\r\n    if (checkIsValid(data)) {\r\n      dispatch(addCustomer({\r\n        email: data.email,\r\n        password: data.password,\r\n        c_password: data.c_password,\r\n        contactNumber: data.contactNumber,\r\n        name: data.name,\r\n        address: data.address\r\n        \r\n      })).then(res => {\r\n        toggleSidebar()\r\n        console.log(res)\r\n      }).catch(err => alert(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] === null) {\r\n          setError('country', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n        if (data[key] !== null && data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const handleSidebarClosed = () => {\r\n    for (const key in defaultValues) {\r\n      setValue(key, '')\r\n    }\r\n    setRole('')\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New Customers'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n      onClosed={handleSidebarClosed}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='name'>\r\n          Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='name'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='name' placeholder='johnDoe99' invalid={errors.name && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='email'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='email'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input\r\n                type='email'\r\n                id='email'\r\n                placeholder='john.doe@example.com'\r\n                invalid={errors.email && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='address'>\r\n          Address <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='address'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='address' placeholder='House# 54' invalid={errors.address && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='contactNumber'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='contactNumber'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='contactNumber' placeholder='(397) 294-5153' invalid={errors.contactNumber && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='password'>\r\n          Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='password'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='password' type='password' placeholder='Enter Password' invalid={errors.password && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='c_password'>\r\n            Confirm Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='c_password'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='c_password' type='password' placeholder='Confirm Password' invalid={errors.c_password && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <Button type='submit' className='me-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","import withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport { store } from '@store/store'\r\nimport { getAllCustomers, getCustomerChunk, removeCustomer } from './store/customerSlice'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst handleRemove = async (id) => {\r\n  try {\r\n    await store.dispatch(removeCustomer(id))\r\n    store.dispatch(getAllCustomers())\r\n    store.dispatch(getCustomerChunk())\r\n    return true\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\nexport const handleRemoveEmployee = (id) => {\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert Employee!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove Employee!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(async function (result) {\r\n      if (result.value) {\r\n        const response = handleRemove(id)\r\n        if (response) {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Removed!',\r\n            text: 'Employee has been removed.',\r\n            customClass: {\r\n              confirmButton: 'btn btn-success'\r\n            }\r\n          })\r\n        }\r\n        \r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        MySwal.fire({\r\n          title: 'Cancelled',\r\n          text: 'Cancelled Removing Employee :)',\r\n          icon: 'error',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\n// import Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n// import { store } from '@store/store'\r\n// import { getUser, deleteUser } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { MoreVertical, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { statusText } from '../../../functions/customfunctions'\r\nimport { handleRemoveEmployee } from './delete'\r\n\r\n// ** Renders Role Columns\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'Name',\r\n    selector: row => row.name,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {/* {renderClient(row)} */}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/edit-customer/${row._id}`}\r\n            className='user_name text-truncate text-body'\r\n            \r\n          >\r\n            <span className='fw-bolder'>{row.name}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Address',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => row.address,\r\n    cell: row => <span className='text-capitalize'>{row.address}</span>\r\n  },\r\n  {\r\n    name: 'Mobile Number',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: row => row.contactNumber,\r\n    cell: row => <span className='text-capitalize'>{row.contactNumber}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[statusText(row.status)]} pill>\r\n        {statusText(row.status)}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem \r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/edit-customer/${row._id}`}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                handleRemoveEmployee(row._id)\r\n                // store.dispatch(deleteUser(row._id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from \"react\"\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from \"./Sidebar\"\r\n\r\n// ** Table Columns\r\nimport { columns } from \"./columns\"\r\n\r\n// ** Store & Actions\r\n// import { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n// ** Third Party Components\r\nimport Select from \"react-select\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy\r\n} from \"react-feather\"\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from \"@utils\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport axios from 'axios'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getAllCustomers, getCustomerChunk } from \"./store/customerSlice\"\r\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\r\n  const response = await axios.get('/api/users/list/all-data')\r\n  return response.data\r\n})\r\n\r\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\r\n  const response = await axios.get('/api/users/list/data', params)\r\n  return {\r\n    params,\r\n    data: response.data.users,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = \",\"\r\n    const lineDelimiter = \"\\n\"\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = \"\"\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\")\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = \"export.csv\"\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csvcharset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv))\r\n    link.setAttribute(\"download\", filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">Show</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Button\r\n              className=\"add-new-user\"\r\n              color=\"primary\"\r\n              onClick={toggleSidebar}\r\n            >\r\n              Add Customer\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  // const store = useSelector((state) => state.users)\r\n  const store = useSelector((state) => state.customers)\r\n  // ** States\r\n  const [sort, setSort] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: \"\",\r\n    label: \"Select Status\"\r\n  })\r\n\r\n  // ** Get data on mount\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Function to toggle sidebar\r\n  useEffect(() => {\r\n    dispatch(getAllCustomers())\r\n    dispatch(getCustomerChunk(\r\n          {\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,  \r\n            status: currentStatus.value\r\n            \r\n          }\r\n    ))\r\n  }, [dispatch, store.customers.length, store.data.length, sort, sortColumn, currentPage])\r\n\r\n\r\n  // ** User filter options\r\n  const statusOptions = [\r\n    { value: \"\", label: \"Select Status\" },\r\n    { value: true, label: \"Active\", number: 2 },\r\n    { value: false, label: \"Inactive\", number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,  \r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      \r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      // return employees.allUsers.slice(0, rowsPerPage)\r\n      return store.customers.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Label for=\"status-select\">Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={(data) => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getCustomerChunk({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage \r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"react-dataTable\">\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UsersList = () => {\r\n  const store = useSelector(state => state.customers)\r\n  const customers = store.customers\r\n  const activeCustomers = customers.filter(employee => employee.status === true)\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n      <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Customers'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{customers.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Customers'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{activeCustomers.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Inactive Customers'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{customers.length - activeCustomers.length}</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}