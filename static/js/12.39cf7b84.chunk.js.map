{"version":3,"sources":["@core/components/widgets/stats/StatsHorizontal.js","functions/customfunctions.js","@core/components/sidebar/index.js","views/user/customer/Sidebar.js","views/user/customer/delete.js","views/user/customer/columns.js","views/user/customer/Table.js","views/user/customer/index.js"],"names":["StatsHorizontal","_ref","icon","color","stats","renderStats","statTitle","className","statsMargin","_jsx","Card","children","CardBody","_jsxs","classnames","_defineProperty","concat","roleText","role","statusText","status","Sidebar","props","_classnames3","open","size","title","width","closeBtn","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","_objectWithoutProperties","_excluded","renderCloseBtn","X","onClick","Modal","_objectSpread","isOpen","toggle","modalClassName","undefined","style","String","ModalHeader","close","tag","PerfectScrollbar","options","wheelPropagation","ModalBody","defaultValues","name","email","password","c_password","contactNumber","address","SidebarNewUsers","_useState","useState","_useState2","_slicedToArray","setRole","_useState3","_useState4","data","setData","dispatch","useDispatch","_useForm","useForm","control","setValue","setError","handleSubmit","errors","formState","console","log","onClosed","key","Form","onSubmit","Object","values","every","field","length","checkIsValid","addCustomer","then","res","catch","err","alert","type","Label","for","Controller","render","_ref2","Input","id","placeholder","invalid","_ref3","FormText","_ref4","_ref5","_ref6","_ref7","Button","outline","MySwal","withReactContent","Swal","handleRemove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","store","removeCustomer","getAllCustomers","getCustomerChunk","abrupt","t0","stop","_x","apply","arguments","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","row","cell","Link","to","_id","Badge","pill","UncontrolledDropdown","DropdownToggle","MoreVertical","DropdownMenu","DropdownItem","Archive","href","e","preventDefault","fire","text","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","_callee2","result","_context2","value","dismiss","DismissReason","cancel","_x2","Trash2","CustomHeader","createAsyncThunk","response","axios","get","sent","params","users","totalPages","total","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Row","Col","xl","htmlFor","onChange","target","caret","Share","Printer","FileText","Grid","File","Copy","UsersList","useSelector","state","customers","sort","setSort","setSearchTerm","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","sortColumn","setSortColumn","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","sidebarOpen","setSidebarOpen","_useState13","label","_useState14","currentStatus","setCurrentStatus","useEffect","q","page","perPage","Fragment","CardHeader","CardTitle","md","Select","theme","selectThemeColors","isClearable","classNamePrefix","number","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","activeCustomers","filter","employee","lg","sm","User","UserCheck","UserPlus","Table"],"mappings":"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","file":"static/js/12.39cf7b84.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","export const roleText = (role) => {\r\n    switch (role) {\r\n        case 0:\r\n          return \"User\"\r\n        case 1:\r\n          return \"Admin\"\r\n        case 2:\r\n          return \"SuperAdmin\"\r\n      }\r\n}\r\n\r\nexport const  statusText = (status) => {\r\n    if (status) {\r\n      return \"active\"\r\n    } else {\r\n      return \"inactive\"\r\n    }\r\n  }","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\n// import { addUser } from '../store'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addCustomer } from './store/customerSlice'\r\n\r\nconst defaultValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  c_password: \"\",\r\n  contactNumber: \"\",\r\n  address: \"\"\r\n  \r\n}\r\n\r\nconst checkIsValid = data => {\r\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\r\n}\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** States\r\n  const [role, setRole] = useState(0)\r\n  const [data, setData] = useState(null)\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const {\r\n    control,\r\n    setValue,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\nconsole.log(data)\r\n  // ** Function to handle form submit\r\n  const onSubmit = data => {\r\n    setData(data)\r\n    if (role === null) {\r\n      setRole(0)\r\n    }\r\n    if (checkIsValid(data)) {\r\n      dispatch(addCustomer({\r\n        email: data.email,\r\n        password: data.password,\r\n        c_password: data.c_password,\r\n        contactNumber: data.contactNumber,\r\n        name: data.name,\r\n        address: data.address\r\n        \r\n      })).then(res => {\r\n        toggleSidebar()\r\n        console.log(res)\r\n      }).catch(err => alert(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] === null) {\r\n          setError('country', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n        if (data[key] !== null && data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  const handleSidebarClosed = () => {\r\n    for (const key in defaultValues) {\r\n      setValue(key, '')\r\n    }\r\n    setRole('')\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New Customers'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n      onClosed={handleSidebarClosed}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='name'>\r\n          Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='name'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='name' placeholder='johnDoe99' invalid={errors.name && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='email'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='email'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input\r\n                type='email'\r\n                id='email'\r\n                placeholder='john.doe@example.com'\r\n                invalid={errors.email && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='address'>\r\n          Address <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='address'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='address' placeholder='House# 54' invalid={errors.address && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='contactNumber'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='contactNumber'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='contactNumber' placeholder='(397) 294-5153' invalid={errors.contactNumber && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='password'>\r\n          Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='password'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='password' type='password' placeholder='Enter Password' invalid={errors.password && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='c_password'>\r\n            Confirm Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='c_password'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='c_password' type='password' placeholder='Confirm Password' invalid={errors.c_password && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <Button type='submit' className='me-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","import withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport { store } from '@store/store'\r\nimport { getAllCustomers, getCustomerChunk, removeCustomer } from './store/customerSlice'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst handleRemove = async (id) => {\r\n  try {\r\n    await store.dispatch(removeCustomer(id))\r\n    store.dispatch(getAllCustomers())\r\n    store.dispatch(getCustomerChunk())\r\n    return true\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\nexport const handleRemoveEmployee = (id) => {\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert Employee!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove Employee!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(async function (result) {\r\n      if (result.value) {\r\n        const response = handleRemove(id)\r\n        if (response) {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Removed!',\r\n            text: 'Employee has been removed.',\r\n            customClass: {\r\n              confirmButton: 'btn btn-success'\r\n            }\r\n          })\r\n        }\r\n        \r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        MySwal.fire({\r\n          title: 'Cancelled',\r\n          text: 'Cancelled Removing Employee :)',\r\n          icon: 'error',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\n// import Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n// import { store } from '@store/store'\r\n// import { getUser, deleteUser } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { MoreVertical, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { statusText } from '../../../functions/customfunctions'\r\nimport { handleRemoveEmployee } from './delete'\r\n\r\n// ** Renders Role Columns\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'Name',\r\n    selector: row => row.name,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {/* {renderClient(row)} */}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/edit-customer/${row._id}`}\r\n            className='user_name text-truncate text-body'\r\n            \r\n          >\r\n            <span className='fw-bolder'>{row.name}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Address',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => row.address,\r\n    cell: row => <span className='text-capitalize'>{row.address}</span>\r\n  },\r\n  {\r\n    name: 'Mobile Number',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: row => row.contactNumber,\r\n    cell: row => <span className='text-capitalize'>{row.contactNumber}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[statusText(row.status)]} pill>\r\n        {statusText(row.status)}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem \r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/edit-customer/${row._id}`}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                handleRemoveEmployee(row._id)\r\n                // store.dispatch(deleteUser(row._id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from \"react\"\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from \"./Sidebar\"\r\n\r\n// ** Table Columns\r\nimport { columns } from \"./columns\"\r\n\r\n// ** Store & Actions\r\n// import { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n// ** Third Party Components\r\nimport Select from \"react-select\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy\r\n} from \"react-feather\"\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from \"@utils\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport axios from 'axios'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getAllCustomers, getCustomerChunk } from \"./store/customerSlice\"\r\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\r\n  const response = await axios.get('/api/users/list/all-data')\r\n  return response.data\r\n})\r\n\r\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\r\n  const response = await axios.get('/api/users/list/data', params)\r\n  return {\r\n    params,\r\n    data: response.data.users,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = \",\"\r\n    const lineDelimiter = \"\\n\"\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = \"\"\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\")\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = \"export.csv\"\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csvcharset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv))\r\n    link.setAttribute(\"download\", filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">Show</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Button\r\n              className=\"add-new-user\"\r\n              color=\"primary\"\r\n              onClick={toggleSidebar}\r\n            >\r\n              Add Customer\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  // const store = useSelector((state) => state.users)\r\n  const store = useSelector((state) => state.customers)\r\n  // ** States\r\n  const [sort, setSort] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: \"\",\r\n    label: \"Select Status\"\r\n  })\r\n\r\n  // ** Get data on mount\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Function to toggle sidebar\r\n  useEffect(() => {\r\n    dispatch(getAllCustomers())\r\n    dispatch(getCustomerChunk(\r\n          {\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,  \r\n            status: currentStatus.value\r\n            \r\n          }\r\n    ))\r\n  }, [dispatch, store.customers.length, store.data.length, sort, sortColumn, currentPage])\r\n\r\n\r\n  // ** User filter options\r\n  const statusOptions = [\r\n    { value: \"\", label: \"Select Status\" },\r\n    { value: true, label: \"Active\", number: 2 },\r\n    { value: false, label: \"Inactive\", number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,  \r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      \r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      // return employees.allUsers.slice(0, rowsPerPage)\r\n      return store.customers.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getCustomerChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Label for=\"status-select\">Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={(data) => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getCustomerChunk({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage \r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"react-dataTable\">\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UsersList = () => {\r\n  const store = useSelector(state => state.customers)\r\n  const customers = store.customers\r\n  const activeCustomers = customers.filter(employee => employee.status === true)\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n      <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Customers'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{customers.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Customers'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{activeCustomers.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Inactive Customers'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{customers.length - activeCustomers.length}</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}