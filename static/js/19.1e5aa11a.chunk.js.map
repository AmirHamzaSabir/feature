{"version":3,"sources":["@core/components/widgets/stats/StatsHorizontal.js","functions/customfunctions.js","views/website/promotions/delete.js","views/website/promotions/columns.js","views/website/promotions/Table.js","views/website/promotions/index.js"],"names":["StatsHorizontal","_ref","icon","color","stats","renderStats","statTitle","className","statsMargin","_jsx","Card","children","CardBody","_jsxs","classnames","_defineProperty","concat","roleText","role","statusText","status","MySwal","withReactContent","Swal","handleRemove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","store","dispatch","removePromotion","abrupt","t0","stop","_x","apply","arguments","statusObj","active","inactive","expired","getTime","row","currentDate","Date","endDate","createdAt","setDate","getDate","days","milliseconds","hours","Math","floor","minutes","seconds","Badge","pill","columns","name","minWidth","sortable","sortField","selector","price","cell","Avatar","img","imageUrl","width","height","title","amount","style","cursor","tag","Link","onClick","e","preventDefault","_id","fire","text","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","then","_ref2","_callee2","result","_context2","value","dismiss","DismissReason","cancel","_x2","Trash","size","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","keys","Object","data","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Row","Col","xl","htmlFor","Input","type","onChange","target","UncontrolledDropdown","DropdownToggle","caret","outline","Share","DropdownMenu","DropdownItem","Printer","FileText","Grid","File","Copy","to","Button","UsersList","useDispatch","useSelector","state","promotions","_useState","useState","_useState2","_slicedToArray","sort","setSort","_useState3","_useState4","setSearchTerm","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","sortColumn","setSortColumn","_useState9","_useState10","setRowsPerPage","_useState11","label","number","_useState12","currentStatus","setCurrentStatus","useEffect","getPromotions","getPromotionsChunk","q","page","perPage","length","Fragment","CardHeader","CardTitle","md","Label","for","Select","theme","selectThemeColors","isClearable","classNamePrefix","options","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","ceil","total","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","products","activeProducts","filter","product","lg","sm","Gift","Table"],"mappings":"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","file":"static/js/19.1e5aa11a.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","export const roleText = (role) => {\r\n    switch (role) {\r\n        case 0:\r\n          return \"User\"\r\n        case 1:\r\n          return \"Admin\"\r\n        case 2:\r\n          return \"SuperAdmin\"\r\n      }\r\n}\r\n\r\nexport const  statusText = (status) => {\r\n    if (status) {\r\n      return \"active\"\r\n    } else {\r\n      return \"inactive\"\r\n    }\r\n  }","import withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport { store } from '@store/store'\r\nimport {removePromotion } from './store/promotionSlice'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst handleRemove = async (id) => {\r\n  try {\r\n    await store.dispatch(removePromotion(id))\r\n    return true\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\nexport const handleRemoveEmployee = (id) => {\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert Promotion!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove Promotion!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(async function (result) {\r\n      if (result.value) {\r\n        const response = handleRemove(id)\r\n        if (response) {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Removed!',\r\n            text: 'Promotion has been removed.',\r\n            customClass: {\r\n              confirmButton: 'btn btn-success'\r\n            }\r\n          })\r\n        }\r\n        \r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        MySwal.fire({\r\n          title: 'Cancelled',\r\n          text: 'Cancelled Removing Promotion :)',\r\n          icon: 'error',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n","// ** React Imports\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { MoreVertical, Trash2, Archive, Trash } from 'react-feather'\r\nimport Avatar from '@components/avatar'\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\nimport { handleRemoveEmployee } from './delete'\r\nimport { statusText } from '../../../functions/customfunctions'\r\n\r\n// ** Renders Status Columns\r\n\r\nconst statusObj = {\r\n  active: 'light-success',\r\n  inactive: 'light-secondary',\r\n  expired: 'light-danger'\r\n}\r\nconst getTime = (row) => {\r\n  const currentDate = new Date()\r\n  const endDate = new Date(row.createdAt)\r\n  endDate.setDate(endDate.getDate() + row.days)\r\n  const milliseconds = endDate - currentDate.getTime()\r\n  const hours = Math.floor(milliseconds / (60 * 60 * 1000))\r\n  const minutes = Math.floor((milliseconds % (60 * 60 * 1000)) / (60 * 1000))\r\n  const seconds = Math.floor((milliseconds % (60 * 1000)) / 1000)\r\n  if (milliseconds <= 0) {\r\n  return <Badge className='text-capitalize' color={statusObj[\"expired\"]} pill>\r\n            {`${hours}h ${minutes}m ${seconds}s`}\r\n         </Badge>\r\n\r\n  } else {\r\n    return <Badge className='text-capitalize' color={statusObj[\"active\"]} pill>\r\n              {`${hours}h ${minutes}m ${seconds}s`}\r\n            </Badge>\r\n  }\r\n}\r\nexport const columns = [\r\n  {\r\n    name: 'image',\r\n    minWidth: '130px',\r\n    sortable: true,\r\n    sortField: 'price',\r\n    selector: row => row.price,\r\n    cell: row => <Avatar className='me-1' img={row.imageUrl} width='50' height='50' />\r\n  },\r\n  {\r\n    name: 'Title',\r\n    sortable: true,\r\n    minWidth: '200px',\r\n    sortField: 'Title',\r\n    selector: row => row.title,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        <div className='d-flex flex-column'>\r\n          {row.title}\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Amount',\r\n    minWidth: '150px',\r\n    sortable: true,\r\n    sortField: 'amount',\r\n    selector: row => row.amount,\r\n    cell: row => <span className='text-capitalize'>{row.amount}</span>\r\n  },\r\n  {\r\n    name: 'Time Left',\r\n    minWidth: '150px',\r\n    sortable: true,\r\n    sortField: 'time',\r\n    selector: row => row.days,\r\n    cell: row => <span className='text-capitalize'>{getTime(row)}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[statusText(row.status)]} pill>\r\n        {statusText(row.status)}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <div  style={{cursor: \"pointer\"}}\r\n              tag={Link}\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                handleRemoveEmployee(row._id)\r\n                // store.dispatch(deleteUser(row._id))\r\n              }}\r\n            >\r\n              <Trash size={14} className='me-50' />\r\n              \r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from \"react\"\r\n\r\n// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Table Columns\r\nimport { columns } from \"./columns\"\r\n\r\n// ** Store & Actions\r\n// import { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n// ** Third Party Components\r\nimport Select from \"react-select\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy\r\n} from \"react-feather\"\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from \"@utils\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport { getPromotions, getPromotionsChunk } from \"./store/promotionSlice\"\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = \",\"\r\n    const lineDelimiter = \"\\n\"\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = \"\"\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\")\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = \"export.csv\"\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csvcharset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv))\r\n    link.setAttribute(\"download\", filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">Show</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <Link to={`/promotions/add-promotion`}>\r\n            <Button\r\n              className=\"add-new-user\"\r\n              color=\"primary\"\r\n            >\r\n              Add Promotion\r\n            </Button>\r\n            </Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  // const store = useSelector((state) => state.users)\r\n  const store = useSelector((state) => state.promotions)\r\n  // ** States\r\n  const [sort, setSort] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: \"\",\r\n    label: \"Select Status\",\r\n    number: 0\r\n  })\r\n\r\n  // ** Function to toggle sidebar\r\n  useEffect(() => {\r\n    dispatch(getPromotions())\r\n    dispatch(getPromotionsChunk(\r\n          {\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,   \r\n            status: currentStatus.value\r\n            \r\n          }\r\n    ))\r\n  }, [dispatch, store.promotions.length, store.data.length, sort, sortColumn, currentPage])\r\n\r\n\r\n  // ** User filter options\r\n  const statusOptions = [\r\n    { value: \"\", label: \"Select Status\" },\r\n    { value: true, label: \"Active\", number: 2 },\r\n    { value: false, label: \"Inactive\", number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getPromotionsChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getPromotionsChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,  \r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getPromotionsChunk({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      \r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      // return employees.allUsers.slice(0, rowsPerPage)\r\n      return store.promotions.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getPromotionsChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Label for=\"status-select\">Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={(data) => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getPromotionsChunk({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage                    \r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"react-dataTable\">\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport {Gift} from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UsersList = () => {\r\n  const store = useSelector(state => state.promotions)\r\n  const products = store.promotions\r\n  const activeProducts = products.filter(product => product.status === true)\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n      <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Promotions'\r\n            icon={<Gift size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{products.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Running Promotions'\r\n            icon={<Gift size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{activeProducts.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Expired Promotions'\r\n            icon={<Gift size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{products.length - activeProducts.length}</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}