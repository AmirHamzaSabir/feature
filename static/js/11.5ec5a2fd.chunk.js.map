{"version":3,"sources":["@core/components/widgets/stats/StatsHorizontal.js","@core/components/sidebar/index.js","functions/customfunctions.js","views/user/employee/Sidebar.js","views/user/employee/delete.js","views/user/employee/columns.js","views/user/employee/Table.js","views/user/employee/index.js"],"names":["StatsHorizontal","_ref","icon","color","stats","renderStats","statTitle","className","statsMargin","_jsx","Card","children","CardBody","_jsxs","classnames","_defineProperty","concat","Sidebar","props","_classnames3","open","size","title","width","closeBtn","toggleSidebar","bodyClassName","contentClassName","wrapperClassName","headerClassName","rest","_objectWithoutProperties","_excluded","renderCloseBtn","X","onClick","Modal","_objectSpread","isOpen","toggle","modalClassName","undefined","style","String","ModalHeader","close","tag","PerfectScrollbar","options","wheelPropagation","ModalBody","roleText","role","statusText","status","defaultValues","name","email","password","c_password","contactNumber","SidebarNewUsers","_useState","useState","_useState2","_slicedToArray","setRole","_useState3","_useState4","data","setData","dispatch","useDispatch","_useForm","useForm","control","setValue","setError","handleSubmit","errors","formState","onClosed","key","console","log","Form","onSubmit","Object","values","every","field","length","checkIsValid","addNewUser","then","res","catch","err","alert","type","Label","for","Controller","render","_ref2","Input","id","placeholder","invalid","_ref3","FormText","_ref4","_ref5","_ref6","value","onChange","e","target","Button","outline","MySwal","withReactContent","Swal","handleRemove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","store","removeUser","getAllUsers","getUsersChunk","abrupt","t0","stop","_x","apply","arguments","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","row","cell","Link","to","_id","roleObj","User","class","maintainer","Database","editor","Edit2","Admin","Settings","SuperAdmin","Slack","Icon","renderRole","Badge","pill","UncontrolledDropdown","DropdownToggle","MoreVertical","DropdownMenu","DropdownItem","Archive","href","preventDefault","fire","text","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","_callee2","result","_context2","dismiss","DismissReason","cancel","_x2","Trash2","CustomHeader","createAsyncThunk","response","axios","get","sent","params","users","totalPages","total","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Row","Col","xl","htmlFor","caret","Share","Printer","FileText","Grid","File","Copy","UsersList","useSelector","state","employees","sort","setSort","setSearchTerm","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","sortColumn","setSortColumn","_useState9","_useState10","setRowsPerPage","_useState11","_useState12","sidebarOpen","setSidebarOpen","_useState13","label","_useState14","currentRole","setCurrentRole","_useState15","number","_useState16","currentStatus","setCurrentStatus","useEffect","q","page","perPage","allUsers","Fragment","CardHeader","CardTitle","md","Select","isClearable","classNamePrefix","theme","selectThemeColors","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","Math","ceil","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","activeEmployees","filter","employee","lg","sm","UserCheck","UserPlus","Table"],"mappings":"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","file":"static/js/11.5ec5a2fd.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","export const roleText = (role) => {\r\n    switch (role) {\r\n        case 0:\r\n          return \"User\"\r\n        case 1:\r\n          return \"Admin\"\r\n        case 2:\r\n          return \"SuperAdmin\"\r\n      }\r\n}\r\n\r\nexport const  statusText = (status) => {\r\n    if (status) {\r\n      return \"active\"\r\n    } else {\r\n      return \"inactive\"\r\n    }\r\n  }","// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\r\nimport { addNewUser } from './store/authSlice'\r\n\r\n// ** Store & Actions\r\n// import { addUser } from '../store'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst defaultValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  c_password: \"\",\r\n  contactNumber: \"\"\r\n  \r\n}\r\n\r\nconst checkIsValid = data => {\r\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\r\n}\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** States\r\n  const [role, setRole] = useState(0)\r\n  const [data, setData] = useState(null)\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const {\r\n    control,\r\n    setValue,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  // ** Function to handle form submit\r\n  const onSubmit = data => {\r\n    setData(data)\r\n    if (role === null) {\r\n      setRole(0)\r\n    }\r\n    if (checkIsValid(data)) {\r\n      dispatch(addNewUser({\r\n        role,\r\n        email: data.email,\r\n        password: data.password,\r\n        c_password: data.c_password,\r\n        contactNumber: data.contactNumber,\r\n        name: data.name\r\n        \r\n      })).then(res => {\r\n        toggleSidebar()\r\n        console.log(res)\r\n      }).catch(err => alert(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] === null) {\r\n          setError('country', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n        if (data[key] !== null && data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSidebarClosed = () => {\r\n    console.log(data)\r\n    for (const key in defaultValues) {\r\n      setValue(key, '')\r\n    }\r\n    setRole('')\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New User'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n      onClosed={handleSidebarClosed}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='name'>\r\n          Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='name'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='name' placeholder='johnDoe99' invalid={errors.name && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='email'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='email'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input\r\n                type='email'\r\n                id='email'\r\n                placeholder='john.doe@example.com'\r\n                invalid={errors.email && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='contactNumber'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='contactNumber'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='contactNumber' placeholder='(397) 294-5153' invalid={errors.contactNumber && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='password'>\r\n          Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='password'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='password' type='password' placeholder='Enter Password' invalid={errors.password && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='c_password'>\r\n            Confirm Password <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='c_password'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='c_password' type='password' placeholder='Confirm Password' invalid={errors.c_password && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        \r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='user-role'>\r\n            User Role\r\n          </Label>\r\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n            {/* <option value=\"0\">User</option>\r\n            <option value=\"1\">Admin</option>\r\n            <option value=\"2\">Super Admin</option> */}\r\n            <option value={0}>User</option>\r\n            <option value={1}>Admin</option>\r\n            <option value={2}>Super Admin</option>\r\n            \r\n          </Input>\r\n        </div>\r\n        <Button type='submit' className='me-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","import withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport { store } from '@store/store'\r\nimport { getAllUsers, getUsersChunk, removeUser } from './store/authSlice'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst handleRemove = async (id) => {\r\n  try {\r\n    await store.dispatch(removeUser(id))\r\n    store.dispatch(getAllUsers())\r\n    store.dispatch(getUsersChunk())\r\n    return true\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\nexport const handleRemoveEmployee = (id) => {\r\n    console.log(id)\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert Employee!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, Remove Employee!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(async function (result) {\r\n      if (result.value) {\r\n        const response = handleRemove(id)\r\n        if (response) {\r\n          MySwal.fire({\r\n            icon: 'success',\r\n            title: 'Removed!',\r\n            text: 'Employee has been removed.',\r\n            customClass: {\r\n              confirmButton: 'btn btn-success'\r\n            }\r\n          })\r\n        }\r\n        \r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        MySwal.fire({\r\n          title: 'Cancelled',\r\n          text: 'Cancelled Removing Employee :)',\r\n          icon: 'error',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\n// import Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n// import { store } from '@store/store'\r\n// import { getUser, deleteUser } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { roleText, statusText } from '../../../functions/customfunctions'\r\nimport { handleRemoveEmployee } from './delete'\r\n// import { getSingleUser } from './store/authSlice'\r\n// ** Renders Client Columns\r\n// const renderClient = row => {\r\n//   const stateNum = Math.floor(Math.random() * 6),\r\n//     states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n//     color = states[stateNum]\r\n\r\n//   if (row.name.length) {\r\n//     return <Avatar className='me-1' img={row.name} width='32' height='32' />\r\n//   } else {\r\n//     return <Avatar color={color || 'primary'} className='me-1' content={row.name || 'John Doe'} initials />\r\n//   }\r\n// }\r\n\r\n// ** Renders Role Columns\r\n\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    User: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    Admin: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    SuperAdmin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[roleText(row.role)] ? roleObj[roleText(row.role)].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[roleText(row.role)] ? roleObj[roleText(row.role)].class : ''} me-50`} />\r\n      {roleText(row.role)}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'Name',\r\n    selector: row => row.name,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {/* {renderClient(row)} */}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row._id}`}\r\n            className='user_name text-truncate text-body'\r\n            \r\n          >\r\n            <span className='fw-bolder'>{row.name}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Role',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => roleText(row.role),\r\n    cell: row => renderRole(row)\r\n  },\r\n  {\r\n    name: 'Mobile Number',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: row => row.contactNumber,\r\n    cell: row => <span className='text-capitalize'>{row.contactNumber}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[statusText(row.status)]} pill>\r\n        {statusText(row.status)}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem \r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/edit-user/${row._id}`}\r\n            >\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                handleRemoveEmployee(row._id)\r\n                // store.dispatch(deleteUser(row._id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from \"react\"\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from \"./Sidebar\"\r\n\r\n// ** Table Columns\r\nimport { columns } from \"./columns\"\r\n\r\n// ** Store & Actions\r\n// import { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n// ** Third Party Components\r\nimport Select from \"react-select\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy\r\n} from \"react-feather\"\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from \"@utils\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from \"reactstrap\"\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport { getAllUsers, getUsersChunk } from \"./store/authSlice\"\r\nimport axios from 'axios'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nexport const getAllData = createAsyncThunk('appUsers/getAllData', async () => {\r\n  const response = await axios.get('/api/users/list/all-data')\r\n  return response.data\r\n})\r\n\r\nexport const getData = createAsyncThunk('appUsers/getData', async params => {\r\n  const response = await axios.get('/api/users/list/data', params)\r\n  return {\r\n    params,\r\n    data: response.data.users,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = \",\"\r\n    const lineDelimiter = \"\\n\"\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = \"\"\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\")\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = \"export.csv\"\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csvcharset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv))\r\n    link.setAttribute(\"download\", filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">Show</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Button\r\n              className=\"add-new-user\"\r\n              color=\"primary\"\r\n              onClick={toggleSidebar}\r\n            >\r\n              Add Employee\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  // const store = useSelector((state) => state.users)\r\n  const store = useSelector((state) => state.employees)\r\n  // ** States\r\n  const [sort, setSort] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({\r\n    value: \"\",\r\n    label: \"Select Role\"\r\n  })\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: \"\",\r\n    label: \"Select Status\",\r\n    number: 0\r\n  })\r\n\r\n  // ** Get data on mount\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Function to toggle sidebar\r\n  useEffect(() => {\r\n    dispatch(getAllUsers())\r\n    dispatch(getUsersChunk(\r\n          {\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,\r\n            role: currentRole.value,\r\n            status: currentStatus.value\r\n            \r\n          }\r\n    ))\r\n  }, [dispatch, store.allUsers.length, store.data.length, sort, sortColumn, currentPage])\r\n\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: \"\", label: \"Select Role\" },\r\n    { value: 2, label: \"SuperAdmin\" },\r\n    { value: 1, label: \"Admin\" },\r\n    { value: 0, label: \"User\" }\r\n  ]\r\n\r\n\r\n  const statusOptions = [\r\n    { value: \"\", label: \"Select Status\" },\r\n    { value: true, label: \"Active\", number: 2 },\r\n    { value: false, label: \"Inactive\", number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getUsersChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getUsersChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,\r\n        role: currentRole.value,   \r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getUsersChunk({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      \r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      // return employees.allUsers.slice(0, rowsPerPage)\r\n      return store.allUsers.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getUsersChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <Label for=\"role-select\">Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={roleOptions}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                theme={selectThemeColors}\r\n                onChange={(data) => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getUsersChunk({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value\r\n                      \r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <Label for=\"status-select\">Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={(data) => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getUsersChunk({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value\r\n                      \r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"react-dataTable\">\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UsersList = () => {\r\n  const store = useSelector(state => state.employees)\r\n  const employees = store.allUsers\r\n  const activeEmployees = employees.filter(employee => employee.status === true)\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n      <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Employees'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{employees.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Employees'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{activeEmployees.length}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Inactive Employees'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{employees.length - activeEmployees.length}</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}