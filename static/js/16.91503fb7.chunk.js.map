{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/pages/authentication/Login.js"],"names":["InputPasswordToggle","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","_jsxs","Fragment","children","_jsx","Label","for","InputGroup","classnames","_defineProperty","Input","_objectSpread","type","id","InputGroupText","onClick","size","Eye","EyeOff","renderIcon","defaultProps","ToastContent","_ref","name","role","Avatar","color","icon","Coffee","defaultValues","password","loginEmail","Login","skin","useSkin","dispatch","useDispatch","history","useHistory","ability","useContext","AbilityContext","_useForm","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","concat","default","Row","Link","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Form","onSubmit","data","Object","values","every","field","length","useJwt","login","email","then","res","userData","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","username","transition","Slide","hideProgressBar","autoClose","catch","err","console","log","key","Controller","render","_ref2","autoFocus","_ref3","Button","block","Facebook","Twitter","Mail","GitHub"],"mappings":"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","file":"static/js/16.91503fb7.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className='form-label' for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          'is-invalid': invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n","// ** React Imports\r\nimport { useContext, Fragment } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// ** Third Party Components\r\nimport { useDispatch } from 'react-redux'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\r\n\r\n// ** Actions\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Utils\r\nimport { getHomeRouteForLoggedInUser } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Form, Input, Label, Alert, Button, CardText, CardTitle, UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title fw-bold'>Welcome, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in as an {role} user to Kch. Now you can start to explore. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst defaultValues = {\r\n  password: 'admin',\r\n  loginEmail: 'admin@demo.com'\r\n}\r\n\r\nconst Login = () => {\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const ability = useContext(AbilityContext)\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    if (Object.values(data).every(field => field.length > 0)) {\r\n      useJwt\r\n        .login({ email: data.loginEmail, password: data.password })\r\n        .then(res => {\r\n          const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\r\n          dispatch(handleLogin(data))\r\n          ability.update(res.data.userData.ability)\r\n          history.push(getHomeRouteForLoggedInUser(data.role))\r\n          toast.success(\r\n            <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Kch</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n            Welcome to Khan Copper's! 👋🏻\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='login-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='loginEmail'\r\n                  name='loginEmail'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      autoFocus\r\n                      type='email'\r\n                      placeholder='john@example.com'\r\n                      invalid={errors.loginEmail && true}\r\n                      {...field}\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                  <Link to='/forgot-password'>\r\n                    <small>Forgot Password?</small>\r\n                  </Link>\r\n                </div>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='remember-me' />\r\n                <Label className='form-check-label' for='remember-me'>\r\n                  Remember Me\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' color='primary' block>\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>New on our platform?</span>\r\n              <Link to='/register'>\r\n                <span>Create an account</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}