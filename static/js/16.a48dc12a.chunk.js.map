{"version":3,"sources":["@core/components/widgets/stats/StatsHorizontal.js","views/ticket/columns.js","views/ticket/Table.js","views/ticket/index.js"],"names":["StatsHorizontal","_ref","icon","color","stats","renderStats","statTitle","className","statsMargin","_jsx","Card","children","CardBody","_jsxs","classnames","_defineProperty","concat","statusObj","inprogress","resolved","unresolved","widget","columns","name","sortable","minWidth","sortField","selector","row","serialNumber","cell","Link","to","_id","productId","store","getState","customers","map","customer","customerId","priority","description","status","Badge","pill","ToastContent","_Fragment","toUpperCase","ToastError","_ref2","CustomHeader","_ref3","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","result","keys","Object","data","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Row","Col","xl","htmlFor","Input","type","id","value","onChange","style","width","e","target","UncontrolledDropdown","DropdownToggle","caret","outline","Share","DropdownMenu","DropdownItem","Printer","onClick","FileText","Grid","File","Copy","UsersList","dispatch","useDispatch","useSelector","state","tickets","_useState","useState","_useState2","_slicedToArray","updatedTicket","setUpdatedTicket","_useState3","_useState4","showStatus","setShowStatus","_useState5","_useState6","sort","setSort","_useState7","_useState8","setSearchTerm","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","sortColumn","setSortColumn","_useState13","_useState14","setRowsPerPage","_useState15","label","_useState16","currentStatus","setCurrentStatus","_useState17","_useState18","editStatus","setEditStatus","updatedColumns","_toConsumableArray","Button","size","charAt","slice","Edit","useEffect","getTickets","getTicketsChunk","q","page","perPage","getAllCustomers","length","statusOptions","Fragment","CardHeader","CardTitle","tag","md","Label","for","Select","theme","selectThemeColors","isClearable","classNamePrefix","options","DataTable","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","ChevronDown","paginationComponent","count","Number","Math","ceil","total","ReactPaginate","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","dataToRender","subHeaderComponent","val","parseInt","currentTarget","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","xs","updatedAt","Date","toISOString","closedAt","updateTicket","then","res","payload","error","toast","username","transition","Slide","hideProgressBar","autoClose","success","catch","err","filter","order","toLowerCase","lg","sm","Table"],"mappings":"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","file":"static/js/16.a48dc12a.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n\r\n// ** Icons Imports\r\nimport { MoreVertical, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n// import { NavLink } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n// ** Renders Role Columns\r\nconst statusObj = {\r\n  inprogress : 'light-warning',\r\n  resolved: 'light-success',\r\n  unresolved: \"light-danger\",\r\n  widget: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Serial Number',\r\n    sortable: true,\r\n    minWidth: '200px',\r\n    sortField: 'Name',\r\n    selector: row => row.serialNumber,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {/* {renderClient(row)} */}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/edit-deliverycode/${row._id}`}\r\n            className='user_name text-truncate text-body'\r\n            \r\n          >\r\n            <span className='fw-bolder'>{row.serialNumber}</span>\r\n          </Link>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Customer Name',\r\n    sortable: true,\r\n    minWidth: '200px',\r\n    sortField: 'role',\r\n    selector: row => row.productId,\r\n    cell: row => (\r\n      store.getState().customers.customers.map(customer => {\r\n        if (customer._id === row.customerId) {\r\n          return <span className='text-capitalize' key={row.customerId}>{customer.name}</span>\r\n        }\r\n      })\r\n    )\r\n  },\r\n  {\r\n    name: 'Priority',\r\n    minWidth: '170px',\r\n    sortable: true,\r\n    sortField: 'description',\r\n    selector: row => row.priority,\r\n    cell: row => <span className='text-capitalize'>{row.priority}</span>\r\n  },\r\n  {\r\n    name: 'Description',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'description',\r\n    selector: row => row.description,\r\n    cell: row => <span className='text-capitalize'>{row.description}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  }\r\n  // {\r\n  //   name: 'Actions',\r\n  //   minWidth: '100px',\r\n  //   cell: row => (\r\n  //     <div className='column-action'>\r\n  //       <UncontrolledDropdown>\r\n  //         <DropdownToggle tag='div' className='btn btn-sm'>\r\n  //           <MoreVertical size={14} className='cursor-pointer' />\r\n  //         </DropdownToggle>\r\n  //         <DropdownMenu>\r\n  //           <DropdownItem \r\n  //             tag={Link}\r\n  //             className='w-100'\r\n  //             to={`/edit-ticket/${row._id}`}\r\n  //           >\r\n  //             <Archive size={14} className='me-50' />\r\n  //             <span className='align-middle'>Edit</span>\r\n  //           </DropdownItem>\r\n  //         </DropdownMenu>\r\n  //       </UncontrolledDropdown>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n]\r\n\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from \"react\"\r\n\r\n// ** Table Columns\r\nimport { columns } from \"./columns\"\r\n\r\n// ** Store & Actions\r\n// import { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n// ** Third Party Components\r\nimport Select from \"react-select\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Edit\r\n} from \"react-feather\"\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from \"@utils\"\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Modal, ModalHeader, ModalBody, Form\r\n} from \"reactstrap\"\r\n\r\nimport { toast, Slide } from 'react-toastify'\r\n// ** Styles\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport { getTickets, getTicketsChunk, updateTicket } from \"./store/ticketSlice\"\r\nimport { getAllCustomers } from \"../user/customer/store/customerSlice\"\r\n\r\nconst ToastContent = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>You have successfully Updated {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\nconst ToastError = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>Error Updated {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = \",\"\r\n    const lineDelimiter = \"\\n\"\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = \"\"\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach((item) => {\r\n      let ctr = 0\r\n      keys.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\")\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = \"export.csv\"\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csvcharset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv))\r\n    link.setAttribute(\"download\", filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">Show</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() => downloadCSV(store.data)}\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  // const store = useSelector((state) => state.users)\r\n  const store = useSelector((state) => state.tickets)\r\n  // ** States\r\n  const [updatedTicket, setUpdatedTicket] = useState(null)\r\n  const [showStatus, setShowStatus] = useState(false)\r\n  const [sort, setSort] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [currentStatus, setCurrentStatus] = useState({\r\n    value: \"\",\r\n    label: \"Select Status\"\r\n  })\r\n  const [editStatus, setEditStatus] = useState({\r\n    value: \"\",\r\n    label: \"Select Status\"\r\n  })\r\n  const handleEditClick = data => {\r\n    setEditStatus({\r\n      value: data.status,\r\n      label: data.status.charAt(0).toUpperCase() + data.status.slice(1)\r\n    })\r\n    setUpdatedTicket(data)\r\n    setShowStatus(true)\r\n  }\r\n\r\n  const handleStatusSubmit = () => {\r\n    const updatedAt = new Date().toISOString()\r\n    let closedAt = \"\"\r\n    if (editStatus.value === \"resolved\") {\r\n      closedAt = new Date().toISOString()\r\n    }\r\n    dispatch(updateTicket({\r\n      id: updatedTicket._id,\r\n      status : editStatus.value,\r\n      updatedAt,\r\n      closedAt\r\n    }))\r\n    .then(res => {\r\n      if (res.payload.error) {\r\n        toast.error(\r\n          <ToastError name={res.payload.error || res.payload.username || 'Status'} />,\r\n          { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n        )\r\n      } else if (res.error) {\r\n        toast.error(\r\n          <ToastError name={res.payload.error || res.payload.username || 'Status'} />,\r\n          { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n        )\r\n      } else {\r\n        toast.success(\r\n        <ToastContent name={res.payload.name || res.payload.username || 'Status'} />,\r\n        { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n      )\r\n      }\r\n      setShowStatus(false)\r\n    })\r\n    .catch(err => {\r\n      toast.success(\r\n        <ToastError name={err.error || res.error || 'Status'} />,\r\n        { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n      )\r\n    })\r\n    \r\n  }\r\n  // ** Updated column to edit and popup the model\r\n  const updatedColumns = [\r\n    ...columns,\r\n    {\r\n      name: 'Actions',\r\n      cell: row => {\r\n        return (\r\n          <div className='d-flex align-items-center'>\r\n            <Button size='sm' color='transparent' className='btn btn-icon' onClick={() => handleEditClick(row)}>\r\n              <Edit className='font-medium-2' />\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  // ** Function to toggle sidebar\r\n  useEffect(() => {\r\n    dispatch(getTickets())\r\n    dispatch(getTicketsChunk(\r\n          {\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,  \r\n            status: currentStatus.value\r\n            \r\n          }\r\n    ))\r\n    dispatch(getAllCustomers())\r\n  }, [dispatch, store.tickets.length, store.data.length, sort, sortColumn, currentPage])\r\n\r\n// (Resolved,Unresolved,Inprogress widget)\r\n  // ** User filter options\r\n  const statusOptions = [\r\n    { value: \"\", label: \"Select Status\" },\r\n    { value: \"resolved\", label: \"Resolved\" },\r\n    { value: \"unresolved\", label: \"Unresolved\"},\r\n    { value: \"inprogress\", label: \"Inprogress\"},\r\n    { value: \"widget\", label: \"Widget\"}\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getTicketsChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getTicketsChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,  \r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getTicketsChunk({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      \r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      // return employees.allUsers.slice(0, rowsPerPage)\r\n      return store.tickets.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getTicketsChunk({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: currentStatus.value\r\n        \r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h4\">Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Label for=\"status-select\">Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={(data) => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getTicketsChunk({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage \r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"react-dataTable\">\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={updatedColumns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n      <Modal isOpen={showStatus} toggle={() => setShowStatus(!showStatus)} className='modal-dialog-centered modal-lg'>\r\n          <ModalHeader className='bg-transparent' toggle={() => setShowStatus(!showStatus)}></ModalHeader>\r\n          <ModalBody className='px-sm-5 pt-50 pb-5'>\r\n            <div className='text-center mb-2'>\r\n              <h1 className='mb-1'>Update Status</h1>\r\n            </div>\r\n            <Form>\r\n              <Row className='gy-1 pt-75'>\r\n                <Col md={12} xs={12}>\r\n                  <Label className='form-label' for='status'>\r\n                    Status\r\n                  </Label>\r\n                  <Select\r\n                    theme={selectThemeColors}\r\n                    isClearable={false}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"select\"\r\n                    options={statusOptions}\r\n                    value={editStatus}\r\n                    onChange={(data) => {\r\n                      setEditStatus(data)\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} className='text-center mt-2 pt-50'>\r\n                  <Button type='button' className='me-1' color='primary'\r\n                  onClick={handleStatusSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { FileText } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UsersList = () => {\r\n  const store = useSelector(state => state.tickets)\r\n  const tickets = store.tickets\r\n  const resolved = tickets.filter(order => order.status.toLowerCase() === \"resolved\")\r\n  const inprogress = tickets.filter(order => order.status.toLowerCase() === \"inprogress\")\r\n  const unresolved = tickets.filter(order => order.status.toLowerCase() === \"unresolved\")\r\n  \r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n      <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total tickets'\r\n            icon={<FileText size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{tickets.length}</h3>}\r\n          />\r\n        </Col>\r\n      <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Resolved tickets'\r\n            icon={<FileText size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{resolved.length}</h3>}\r\n          />\r\n        </Col>\r\n      <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Inprogress tickets'\r\n            icon={<FileText size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{inprogress.length}</h3>}\r\n          />\r\n        </Col>\r\n      <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Unresolved tickets'\r\n            icon={<FileText size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{unresolved.length}</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}