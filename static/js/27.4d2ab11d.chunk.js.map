{"version":3,"sources":["views/delivery/Add.js"],"names":["ToastContent","_ref","name","_jsx","_Fragment","children","className","_jsxs","toUpperCase","ToastError","_ref2","Add","dispatch","useDispatch","history","useHistory","_useState","useState","_useState2","_slicedToArray","showStatus","setShowStatus","_useState3","_useState4","fileName","setFileName","_useState5","_useState6","file","setFile","_useForm","useForm","defaultValues","pinCode","district","countryName","reset","control","setError","handleSubmit","errors","formState","handlePreview","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","fileType","wrap","_context","prev","next","target","files","split","toLowerCase","type","toast","error","icon","transition","Slide","hideProgressBar","autoClose","stop","_x","apply","arguments","useEffect","console","log","Button","color","onClick","Plus","size","Form","onSubmit","data","Object","values","every","field","length","addDeliveryCode","_objectSpread","then","res","payload","username","push","success","record","key","Row","Col","md","xs","Label","for","Controller","id","render","_ref4","Input","placeholder","invalid","_ref5","_ref6","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","style","width","tag","onChange","hidden","accept","formData","FormData","append","addDeliveryCodeThroughExcel","response","JSON","parse","message","catch"],"mappings":"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","file":"static/js/27.4d2ab11d.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Row, Col, Form, Button, Input, Label, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport {useDispatch } from 'react-redux'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { addDeliveryCode, addDeliveryCodeThroughExcel } from './store/deliverySlice'\r\nimport { Plus } from 'react-feather'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst ToastContent = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>You have successfully Added {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\nconst ToastError = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>{name}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst Add = () => {\r\n    // ** State\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [showStatus, setShowStatus] = useState(false)\r\n    const [fileName, setFileName] = useState(\"\")\r\n    const [file, setFile] = useState(null)\r\n      // ** Hook\r\n    const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n    } = useForm({\r\n    defaultValues: {\r\n      pinCode: '',\r\n      district: '',\r\n      countryName: ''\r\n  }\r\n    })\r\n\r\n    const onSubmit = data => {\r\n      if (Object.values(data).every(field => field.length > 0)) {\r\n\r\n        dispatch(addDeliveryCode({\r\n          ...data\r\n        })).then(res => {\r\n          if (res.payload.error) {\r\n            toast.error(\r\n              <ToastError name={res.payload.error || res.payload.username || 'John Doe'} />,\r\n              { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n            )\r\n          } else {\r\n            history.push(\"/delivery\")\r\n            toast.success(\r\n            <ToastContent name={res.payload.record.district || res.payload.username || 'John Doe'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key].length === 0) {\r\n            setError(key, {\r\n              type: 'manual'\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const handlePreview = async (e) => {\r\n      const file = e.target.files[0]\r\n      const fileType = file?.name.split(\".\")[1]\r\n      if (fileType?.toLowerCase() === \"xlsx\" || fileType?.toLowerCase() === \"xls\" || file?.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n        setFileName(file.name)\r\n        setFile(file)\r\n      } else {\r\n        toast.error(\r\n          <ToastError  name={\"File. File must be xlsx or xls\"}  />,\r\n          { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n        )\r\n    }\r\n    }\r\n    const handleFileSubmit = () => {\r\n      if (file !== null) {\r\n        const formData = new FormData()\r\n        formData.append('file', file)    \r\n        dispatch(addDeliveryCodeThroughExcel(formData)).then(response => {\r\n          console.log(response)\r\n          if (response.error) {\r\n            const data = JSON.parse(response.payload)\r\n            toast.error(\r\n              <ToastError  name={data.message}  />,\r\n              { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n            )\r\n          } else {\r\n            setShowStatus(false)\r\n            setFile(null)\r\n            setFileName(\"\")\r\n            toast.success(\r\n              <ToastContent name={'Delivery Codes'} />,\r\n              { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n            )\r\n          }\r\n          \r\n        }).catch(error => {\r\n          return error\r\n        })\r\n      } else {\r\n        toast.error(\r\n          <ToastError  name={\"Select the Excel file first\"}  />,\r\n          { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        reset({\r\n          pinCode: '',\r\n          district: '',\r\n          countryName: ''\r\n        })\r\n      }\r\n      useEffect(() => {\r\n        console.log(showStatus)\r\n        if (!showStatus) {\r\n          setFile(null)\r\n          setFileName(\"\")\r\n        }\r\n      }, [showStatus])\r\n    return ( \r\n        <>\r\n         <div className='text-end mb-2'>\r\n            <Button type='submit' className='me-1' color='primary' onClick={() => setShowStatus(true)}>\r\n              <Plus size={20} /><span>Upload Codes</span>\r\n            </Button>\r\n          </div>\r\n          <div className='text-center mb-2'>\r\n            <h1 className='mb-1'>Add Delivery Code</h1>\r\n          </div>\r\n         \r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row className='gy-1 pt-75'>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='pinCode'>\r\n                  PinCode\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='pinCode'\r\n                  id='pinCode'\r\n                  name='pinCode'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='pinCode' placeholder='46512' invalid={errors.pinCode && true} />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='district'>\r\n                  District\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='district'\r\n                  id='district'\r\n                  name='district'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='district' placeholder='Delhi' invalid={errors.district && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className='form-label' for='countryName'>\r\n                  Country Name\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='countryName'\r\n                  id='countryName'\r\n                  name='countryName'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='countryName' placeholder='India' invalid={errors.countryName && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col xs={12} className='text-start mt-2 pt-50'>\r\n                <Button type='submit' className='me-1' color='primary'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  type='reset'\r\n                  color='secondary'\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    history.push(\"/delivery\")\r\n                  }}\r\n                >\r\n                  Discard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Modal isOpen={showStatus} toggle={() => setShowStatus(!showStatus)} className='modal-dialog-centered modal-lg'>\r\n          <ModalHeader className='bg-transparent' toggle={() => setShowStatus(!showStatus)}></ModalHeader>\r\n          <ModalBody className='px-sm-5 pt-50 pb-5'>\r\n            <div className='text-center mb-2'>\r\n              <h1 className='mb-1'>Upload Delivery Code file</h1>\r\n            </div>\r\n            <Form>\r\n              <Row className='gy-1 pt-75'>\r\n                <Col md={12} xs={12}>\r\n                <div className='d-flex ms-1 me-25'>\r\n                  {fileName}\r\n                </div>\r\n                <div className='d-flex align-items-end mt-75 ms-1' style={{width:\"100%\"}}>\r\n                  <div>\r\n                    <Button tag={Label} name='file' className='mb-75 me-75' size='sm' color='primary'>\r\n                      Upload\r\n                      <Input type='file' name='file' onChange={handlePreview} hidden accept='.xlsx, .xls' />\r\n                    </Button>\r\n                    <Button className='mb-75' color='secondary' size='sm' outline onClick={handleFileSubmit}>\r\n                      Submit\r\n                    </Button>\r\n                    <p className='mb-0'>Allowed excel file only with extension .xlsx / .xls</p>\r\n                  </div>\r\n                </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n        </>\r\n     )\r\n}\r\n \r\nexport default Add"],"sourceRoot":""}