{"version":3,"sources":["views/category/store/categoryService.js","views/category/store/categorySlice.js","views/product/Add.js"],"names":["URL","postCategory","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","category","token","config","response","wrap","_context","prev","next","headers","Authorization","concat","axios","post","sent","abrupt","data","stop","_x","_x2","apply","arguments","getCategory","_ref2","_callee2","_context2","get","getSingleCategory","_ref3","_callee3","id","_context3","_x3","_x4","updateCategory","_ref4","_callee4","userData","_context4","put","_id","_x5","_x6","removeCategory","_ref5","_callee5","_context5","delete","_x7","_x8","categoryService","addCategory","createAsyncThunk","thunkApi","message","getState","auth","user","t0","toString","rejectWithValue","error","_x9","_x10","categorySlice","createSlice","name","initialState","categories","isLoading","isSuccess","isError","reducers","reset","state","extraReducers","builder","addCase","pending","rejected","action","payload","fulfilled","push","newCategory","_toConsumableArray","updatedRecordIndex","findIndex","splice","deletedRecordIndex","meta","arg","actions","ToastContent","_jsx","_Fragment","children","className","_jsxs","toUpperCase","Add","dispatch","useDispatch","store","useSelector","employees","_useState","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_useState3","_useState4","selectedRole","setSelectedRole","history","useHistory","_useForm","useForm","defaultValues","color","description","control","setError","handleSubmit","errors","formState","sizeOptions","value","label","useEffect","then","res","activeCategories","filter","entry","status","console","log","Form","onSubmit","Object","values","every","field","length","addProduct","_objectSpread","role","toast","success","username","icon","transition","Slide","hideProgressBar","autoClose","key","type","Row","Col","md","xs","Label","for","Controller","render","Input","placeholder","invalid","price","quantity","Select","isClearable","classNamePrefix","options","theme","selectThemeColors","defaultValue","onChange","option","_ref6","defaultChecked","htmlFor","Check","size","X","Button","outline","onClick"],"mappings":"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","file":"static/js/21.73620b54.chunk.js","sourcesContent":["import axios from 'axios'\r\n// const URL = `${process.env.REACT_APP_BASE_URL}/api/category`\r\nconst URL = `http://localhost:3001/api/category`\r\n// const URL = `http://localhost:3001/api/category`;\r\nconst postCategory = async (category, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    const response = await axios.post(`${URL}/add-category`, category, config)\r\n    return response.data\r\n}\r\n\r\nconst getCategory = async () => {\r\n    const response = await axios.get(`${URL}/get-category`)\r\n    return response.data\r\n}\r\n// fetch single category for update\r\nconst getSingleCategory = async (id, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization:`Bearer ${token}`\r\n        }\r\n    }\r\n    const response = await axios.get(`${URL}/get-category/${id}`, config)\r\n    return response.data\r\n}\r\n\r\nconst updateCategory = async(userData, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization:`Bearer ${token}`\r\n        }\r\n    }\r\n    const response = await axios.put(`${URL}/update-category/${userData._id}`, userData, config)\r\n    return response.data\r\n}\r\n\r\nconst removeCategory = async(token, id) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization:`Bearer ${token}`\r\n        }\r\n    }\r\n    const response = await axios.delete(`${URL}/remove-category/${id}`, config)\r\n    return response.data\r\n}\r\n\r\n\r\nconst categoryService = {\r\n    getCategory,\r\n    postCategory,\r\n    removeCategory,\r\n    getSingleCategory,\r\n    updateCategory\r\n}\r\n\r\n\r\nexport default categoryService","import { createSlice,  createAsyncThunk } from '@reduxjs/toolkit'\r\nimport categoryService from './categoryService'\r\n\r\n// set the initialState\r\nconst initialState = {\r\n    categories: [], \r\n    isLoading: false, \r\n    isSuccess: false, \r\n    isError: false, \r\n    message: '', \r\n    response:''\r\n}\r\n\r\nexport const addCategory = createAsyncThunk('category/post',  async (category,  thunkApi) => {\r\n    try {\r\n        \r\n    const token = thunkApi.getState().auth.user.token\r\n    return categoryService.postCategory(category,  token)\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkApi.rejectWithValue(message)\r\n    }\r\n})\r\n\r\nexport const getCategory = createAsyncThunk('category/get',  async (category,  thunkApi) => {\r\n    try {\r\n        \r\n    return categoryService.getCategory()\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkApi.rejectWithValue(message)\r\n    }\r\n})\r\n//get single category by id\r\nexport const getSingleCategory = createAsyncThunk('auth/get-single-category',  async (id,  thunkApi) => {\r\n    try {\r\n        const token = thunkApi.getState().auth.user.token\r\n        return categoryService.getSingleCategory(id, token)\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkApi.rejectWithValue(message)\r\n    }\r\n})\r\n\r\n// update user\r\nexport const updateCategory = createAsyncThunk('category/update',  async (userData,  thunkApi) => {\r\n    try {\r\n        const token = thunkApi.getState().auth.user.token\r\n        return categoryService.updateCategory(userData,  token)\r\n    } catch (error) {\r\n        return thunkApi.rejectWithValue(error.error)\r\n    }\r\n})\r\n\r\n//remove category api\r\nexport const removeCategory = createAsyncThunk('category/remove-single-category',  async (id,  thunkApi) => {\r\n    try {\r\n        const token = thunkApi.getState().auth.user.token\r\n        return categoryService.removeCategory(token, id)\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkApi.rejectWithValue(message)\r\n    }\r\n})\r\n\r\nexport const categorySlice = createSlice({\r\n    name: 'category', \r\n    initialState, \r\n    reducers: {\r\n        reset: (state) => {\r\n            state.isLoading = false\r\n            state.isSuccess = false\r\n            state.isError = false\r\n            state.message = ''\r\n        }\r\n    }, \r\n    extraReducers: (builder) => {\r\n        builder \r\n            .addCase(addCategory.pending,  (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(addCategory.rejected,  (state,  action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n            .addCase(addCategory.fulfilled,  (state,  action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.isError = false\r\n                state.categories.push(action.payload.newCategory)\r\n            })\r\n            .addCase(getCategory.pending,  (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(getCategory.rejected,  (state,  action) => {\r\n                \r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n            .addCase(getCategory.fulfilled,  (state,  action) => {\r\n                state.categories = [...action.payload.categories]\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.isError = false\r\n            })\r\n            .addCase(getSingleCategory.pending,  (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(getSingleCategory.rejected,  (state,  action) => {\r\n                \r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.categories = []\r\n                state.message = action.payload\r\n            })\r\n            .addCase(getSingleCategory.fulfilled,  (state,  action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.isError = false\r\n                state.response = action.payload\r\n            })\r\n            .addCase(updateCategory.pending,  (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(updateCategory.rejected,  (state,  action) => {\r\n                \r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.isSuccess = false\r\n                state.message = action.payload\r\n            })\r\n            .addCase(updateCategory.fulfilled,  (state,  action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.isError = false\r\n                // Find the index of the updated record\r\n                const updatedRecordIndex = state.categories.findIndex(\r\n                    (category) => category._id === action.payload._id\r\n                )\r\n                // If the updated record is found in the categories array,  update it\r\n                if (updatedRecordIndex !== -1) {\r\n                    state.categories.splice(updatedRecordIndex, 1, action.payload)\r\n                }\r\n            })\r\n            .addCase(removeCategory.pending,  (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(removeCategory.rejected,  (state,  action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload.category\r\n            })\r\n            .addCase(removeCategory.fulfilled,  (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.payload = action.payload\r\n                //  // Find the index of the deleted record\r\n                const deletedRecordIndex = state.categories.findIndex(\r\n                    (category) => category._id === action.meta.arg\r\n                )\r\n  \r\n                // // If the deleted record is found in the allUsers array,  remove it\r\n                if (deletedRecordIndex !== -1) {\r\n                    state.categories.splice(deletedRecordIndex,  1)\r\n                }\r\n            })\r\n    }\r\n})\r\nexport const { reset } = categorySlice.actions\r\nexport default categorySlice.reducer","// ** Reactstrap Imports\r\nimport { Row, Col, Form, Button, Modal, Input, Label, ModalBody, ModalHeader } from 'reactstrap'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Check,  X } from 'react-feather'\r\nimport { selectThemeColors } from '@utils'\r\nimport { useState, useEffect } from 'react'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { addProduct } from './store/productSlice'\r\nimport { getCategory } from '../category/store/categorySlice'\r\nconst ToastContent = ({ name}) => (\r\n  <>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <h6 className='toast-title fw-bold'>You have successfully Added Employee {name.toUpperCase()}</h6>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst Add = () => {\r\n    // ** State\r\n    const dispatch = useDispatch()\r\n    const store = useSelector(state => state.employees)\r\n    const [selectedSize, setSelectedSize] = useState(false)\r\n    const [selectedRole, setSelectedRole] = useState(0)\r\n    // const [categories, setcategories] = useState([])\r\n    const history = useHistory()\r\n      // ** Hook\r\n    const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n    } = useForm({\r\n    defaultValues: {\r\n      name: '',\r\n      color: '',\r\n      description: ''\r\n  }\r\n    })\r\n    const onSubmit = data => {\r\n      console.log(selectedSize)\r\n      console.log(Object.values(data))\r\n      if (Object.values(data).every(field => field.length > 0)) {\r\n\r\n        dispatch(addProduct({\r\n          ...store.message,\r\n          ...data, \r\n          role : selectedRole.value\r\n        })).then(res => {\r\n          history.push(\"/user/employee\")\r\n          toast.success(\r\n            <ToastContent name={res.payload.name || res.payload.username || 'John Doe'} />,\r\n            { icon: false, transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key].length === 0) {\r\n            setError(key, {\r\n              type: 'manual'\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const sizeOptions = [\r\n      { value: 'xs', label: 'xs' },\r\n      { value: 'sm', label: 'sm' },\r\n      { value: 'lg', label: 'lg' },\r\n      { value: 'xl', label: 'xl' },\r\n      { value: 'xxl', label: 'xxl' }\r\n    ]\r\n    const roleOptions = [\r\n      { value: 0, label: 'User' },\r\n      { value: 1, label: 'Admin' },\r\n      { value: 2, label: 'Super Admin' }\r\n    ]\r\n\r\n    const handleReset = () => {\r\n        reset({\r\n            name: '',\r\n            color: '',\r\n            description: ''\r\n        })\r\n      }\r\n\r\n      useEffect(() => {\r\n        dispatch(getCategory()).then((res) => {\r\n            const activeCategories = res.payload.categories.filter(entry => entry.status)\r\n            console.log(activeCategories)\r\n            return res\r\n        })\r\n      }, [dispatch, setSelectedRole])\r\n\r\n    return ( \r\n        <>\r\n       <div className='text-center mb-2'>\r\n            <h1 className='mb-1'>Add Product Information</h1>\r\n          </div>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row className='gy-1 pt-75'>\r\n              <Col md={6} xs={12}>\r\n                <Label className='form-label' for='name'>\r\n                  Name\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='name'\r\n                  id='name'\r\n                  name='name'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='name' placeholder='Doe' invalid={errors.name && true} />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={6} xs={12}>\r\n                <Label className='form-label' for='price'>\r\n                    Price\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  type='price'\r\n                  id='price'\r\n                  name='price'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='price' placeholder='1' invalid={errors.price && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Label className='form-label' for='color'>\r\n                  Color\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  id='color'\r\n                  name='color'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='color' placeholder='black' invalid={errors.color && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Label className='form-label' for='quantity'>\r\n                  Quantity\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  id='quantity'\r\n                  name='quantity'\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='quantity' placeholder='1' invalid={errors.quantity && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={6} xs={12}>\r\n                <Label className='form-label' for='size'>\r\n                  Size:\r\n                </Label>\r\n                <Select\r\n                  id='Role'\r\n                  isClearable={false}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  options={sizeOptions}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={sizeOptions[0]}\r\n                  onChange={option => setSelectedSize(option)}\r\n                />\r\n              </Col>\r\n              <Col md={6} xs={12}>\r\n                <Label className='form-label' for='category'>\r\n                  Category\r\n                </Label>\r\n                <Select\r\n                  id='category'\r\n                  isClearable={false}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  options={roleOptions}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={sizeOptions[0]}\r\n                  onChange={option => setSelectedRole(option)}\r\n                />\r\n              </Col>\r\n              <Col xs={12}>\r\n                <Label className='form-label' for='description'>\r\n                  Description\r\n                </Label>\r\n                <Controller\r\n                  control={control}\r\n                  id='description'\r\n                  name='description'\r\n                  render={({ field }) => (\r\n                    <Input {...field} type='textarea' id='description' placeholder='' invalid={errors.description && true}/>\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col xs={12}>\r\n                <div className='d-flex align-items-center mt-1'>\r\n                  <div className='form-switch'>\r\n                    <Input type='switch' defaultChecked id='billing-switch' name='billing-switch' />\r\n                    <Label className='form-check-label' htmlFor='billing-switch'>\r\n                      <span className='switch-icon-left'>\r\n                        <Check size={14} />\r\n                      </span>\r\n                      <span className='switch-icon-right'>\r\n                        <X size={14} />\r\n                      </span>\r\n                    </Label>\r\n                  </div>\r\n                  <Label className='form-check-label fw-bolder' for='billing-switch'>\r\n                    Use as a billing address?\r\n                  </Label>\r\n                </div>\r\n              </Col>\r\n              <Col xs={12} className='text-center mt-2 pt-50'>\r\n                <Button type='submit' className='me-1' color='primary'>\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  type='reset'\r\n                  color='secondary'\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                  }}\r\n                >\r\n                  Discard\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </>\r\n     )\r\n}\r\n \r\nexport default Add"],"sourceRoot":""}