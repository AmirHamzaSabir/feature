{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/pages/authentication/Register.js"],"names":["InputPasswordToggle","forwardRef","props","ref","_classnames","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","inputVisibility","setInputVisibility","_jsxs","Fragment","children","_jsx","Label","for","InputGroup","classnames","_defineProperty","Input","_objectSpread","type","id","InputGroupText","onClick","size","Eye","EyeOff","renderIcon","defaultProps","defaultValues","email","terms","username","password","Register","ability","useContext","AbilityContext","skin","useSkin","history","useHistory","dispatch","useDispatch","_useForm","useForm","control","setError","handleSubmit","errors","formState","illustration","source","require","concat","default","Row","Link","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Form","action","onSubmit","data","tempData","Object","values","every","field","length","useJwt","register","then","res","error","property","message","user","accessToken","update","handleLogin","push","catch","err","console","log","key","Controller","name","render","_ref","autoFocus","FormFeedback","_ref2","_ref3","_ref4","checked","value","href","Button","block","color","Facebook","Twitter","Mail","GitHub"],"mappings":"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","file":"static/js/22.70c55823.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className='form-label' for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          'is-invalid': invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogin } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Context\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardTitle, CardText, Label, Button, Form, Input, FormFeedback } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst defaultValues = {\r\n  email: '',\r\n  terms: false,\r\n  username: '',\r\n  password: ''\r\n}\r\n\r\nconst Register = () => {\r\n  // ** Hooks\r\n  const ability = useContext(AbilityContext)\r\n  const { skin } = useSkin()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    const tempData = { ...data }\r\n    delete tempData.terms\r\n    if (Object.values(tempData).every(field => field.length > 0) && data.terms === true) {\r\n      const { username, email, password } = data\r\n      useJwt\r\n        .register({ username, email, password })\r\n        .then(res => {\r\n          if (res.data.error) {\r\n            for (const property in res.data.error) {\r\n              if (res.data.error[property] !== null) {\r\n                setError(property, {\r\n                  type: 'manual',\r\n                  message: res.data.error[property]\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\r\n            ability.update(res.data.user.ability)\r\n            dispatch(handleLogin(data))\r\n            history.push('/')\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual',\r\n            message: `Please enter a valid ${key}`\r\n          })\r\n        }\r\n        if (key === 'terms' && data.terms === false) {\r\n          setError('terms', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Kch</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Adventure starts here 🚀\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n\r\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Controller\r\n                  id='username'\r\n                  name='username'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input autoFocus placeholder='johndoe' invalid={errors.username && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.username ? <FormFeedback>{errors.username.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Controller\r\n                  id='email'\r\n                  name='email'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input type='email' placeholder='john@example.com' invalid={errors.email && true} {...field} />\r\n                  )}\r\n                />\r\n                {errors.email ? <FormFeedback>{errors.email.message}</FormFeedback> : null}\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <Controller\r\n                  id='password'\r\n                  name='password'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Controller\r\n                  name='terms'\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Input {...field} id='terms' type='checkbox' checked={field.value} invalid={errors.terms && true} />\r\n                  )}\r\n                />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button type='submit' block color='primary'>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/login'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}